# Vytvori interniho uzivatele
# @required_vars: [dsw_user, dsw_user.email]

- name: user_get_uuid | Get API token if nessesary
  ansible.builtin.include_tasks: get_admin_token.yml
  when: dsw_api_token is not defined

- name: "user_get_uuid | Unset user UUID"
  ansible.builtin.set_fact:
    dsw_user_uuid:

- name: "user_get_uuid | Check if internal user exists: {{ dsw_user.email }}"
  ansible.builtin.uri:
    url: "{{ dsw_api_url }}/users?q={{ dsw_user.email }}"
    method: GET
    status_code: 200
    headers:
      Authorization: "Bearer {{ dsw_api_token }}"
  register: dsw_api_response

- name: "[DEBUG] user_get_uuid | Got DSW API response {{ dsw_user.email }}"
  ansible.builtin.debug:
    var: dsw_api_response
  when: "'DEBUG' in ansible_run_tags"

- name: "user_get_uuid | Set fact UUID for {{ dsw_user.email }}"
  ansible.builtin.set_fact:
    dsw_user_uuid: "{{ dsw_api_response.json._embedded.users[0].uuid }}"
  when: dsw_api_response.json._embedded.users[0] is defined

- name: "[DEBUG] user_get_uuid | Got dsw_user UUID: {{ dsw_user }}"
  ansible.builtin.debug:
    var: dsw_user_uuid
  when:
    - "'DEBUG' in ansible_run_tags"
    - dsw_user_uuid is defined
