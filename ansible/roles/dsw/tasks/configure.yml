- name: "Have DSW config dir '{{ dsw_config_dir }}'"
  ansible.builtin.file:
    path: "{{ dsw_config_dir }}"
    state: directory
    owner: "root"
    group: "root"
    # mode: "u=rwx,go=" TODO zavest uzivatele uid 10000
    mode: "u=rwx,go=rx"
  tags:
    - always

- name: Update DSW app config file
  ansible.builtin.template:
    dest: "{{ dsw_config_dir }}/dsw.yml"
    src: "dsw.yml.j2"
    owner: "root"
    group: "root"
    # mode: "u=rw,go=" TODO
    mode: "u=rw,go=r"
  tags:
    - configure
    - dsw-config-app

- name: Update DSW integration config file
  ansible.builtin.template:
    dest: "{{ dsw_config_dir }}/integration.yml"
    src: "dsw-integration.yml.j2"
    owner: "root"
    group: "root"
    # mode: "u=rw,go="
    mode: "u=rw,go=r"
  tags:
    - configure
    - dsw-config-app

- name: Configure DSW client
  ansible.builtin.copy:
    src: "files/dsw-client/"
    dest: "{{ dsw_config_dir }}/dsw-client/"
    owner: "root"
    group: "root"
    mode: "u=rwX,go=rX"
    force: true
  tags:
    - configure
    - dsw-config-client

- name: Configure DSW mailer
  ansible.builtin.copy:
    src: "files/dsw-mailer/"
    dest: "{{ dsw_config_dir }}/dsw-mailer/"
    owner: "root"
    group: "root"
    mode: "u=rwX,go=rX"
    force: true
  tags:
    - configure
    - dsw-config-mailer

# MinIO
- name: "Have MinIO data dir '{{ dsw_minio_data_dir }}'"
  ansible.builtin.file:
    path: '{{ dsw_minio_data_dir }}'
    state: directory
    owner: "root"
    group: "root"
    mode: "u=rwx,go="
  tags:
    - configure
    - dsw-config-minio

- name: "Have MinIO backup dir '{{ dsw_minio_backup_dir }}'"
  ansible.builtin.file:
    path: "{{ dsw_minio_backup_dir }}"
    state: directory
    owner: "root"
    group: "root"
    mode: "u=rwx,go="
  tags:
    - configure
    - dsw-config-minio

- name: Update DSW backup-minio script
  ansible.builtin.template:
    dest: "{{ dsw_config_dir }}/backup-minio.sh"
    src: "dsw-backup-minio.sh.j2"
    owner: "root"
    group: "root"
    mode: "u=rwx,go="
  tags:
    - configure
    - dsw-config-minio

  # NOTE pouzit system role task?
- name: Let Cron to run DSW backup-minio script hourly
  ansible.builtin.cron:
    name: dws_backup_minio
    state: present
    special_time: hourly
    job: "{{ dsw_config_dir }}/backup-minio.sh >/dev/null"
  tags:
    - configure
    - dsw-config-minio

# Postgres Backup

- name: Have Postgres data dir '{{ dsw_postgres_data_dir }}'
  ansible.builtin.file:
    path: '{{ dsw_postgres_data_dir }}'
    state: directory
    owner: "root"
    group: "root"
    mode: "uo=rwx,g=" # TODO: zkontrolovat, zdali je to spravne
  tags:
    - configure
    - dsw-config-postgres

- name: Have Postgres backup dir '{{ dsw_postgres_backup_dir }}'
  ansible.builtin.file:
    path: '{{ dsw_postgres_backup_dir }}'
    state: directory
    owner: "root"
    group: "root"
    mode: "uo=rwx,g=" # TODO: zkontrolovat, zdali je to spravne
  tags:
    - configure
    - dsw-config-postgres

- name: Update DSW backup-postgres script
  ansible.builtin.template:
    dest: "{{ dsw_config_dir }}/backup-postgres.sh"
    src: "dsw-backup-postgres.sh.j2"
    owner: "root"
    group: "root"
    mode: "u=rwx,go="
  tags:
    - configure
    - dsw-config-postgres

  # NOTE system role task?
- name: Let Cron to run DSW backup-postgres script hourly
  ansible.builtin.cron:
    name: dws_backup_postgres
    state: present
    special_time: hourly
    job: "{{ dsw_config_dir }}/backup-postgres.sh"
  tags:
    - configure
    - dsw-config-postgres
