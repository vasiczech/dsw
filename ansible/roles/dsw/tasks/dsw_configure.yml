- name: "Have DSW config dir '{{ dsw_config_dir }}'"
  ansible.builtin.file:
    path: "{{ dsw_config_dir }}"
    state: directory
    owner: "root"
    group: "root"
    # mode: "u=rwx,go=" TODO: zavest uzivatele uid 10000
    mode: "u=rwx,go=rx"

- name: Update DSW app config file
  ansible.builtin.template:
    dest: "{{ dsw_config_dir }}/application.yml"
    src: "dsw-conf-application.yml.j2"
    owner: "root"
    group: "root"
    mode: "u=rw,go=r"

# Docker compose
# TODO: nahradit docker compose za Ansible roli "mendelu-containers-role"

- name: "Have DSW config dir '{{ dsw_compose_dir }}'"
  ansible.builtin.file:
    path: "{{ dsw_compose_dir }}"
    state: directory
    owner: "root"
    group: "root"
    # mode: "u=rwx,go=" TODO: zavest uzivatele uid 10000
    mode: "u=rwx,go=rx"

- name: Configure docker-compose project yaml file
  ansible.builtin.template:
    src: dsw-docker-compose.yml.j2
    dest: "{{ dsw_compose_dir }}/docker-compose.yml"
    owner: "root"
    group: "root"
    mode: "u=rwx,go="

# End Docker compose

# - name: Update DSW integration config file
#   ansible.builtin.template:
#     dest: "{{ dsw_config_dir }}/integration.yml"
#     src: "dsw-integration.yml.j2"
#     owner: "root"
#     group: "root"
#     # mode: "u=rw,go="
#     mode: "u=rw,go=r"

# - name: Configure DSW client
#   ansible.builtin.copy:
#     src: "files/dsw-client/"
#     dest: "{{ dsw_config_dir }}/dsw-client/"
#     owner: "root"
#     group: "root"
#     mode: "u=rwX,go=rX"
#     force: true

# - name: Configure DSW mailer
#   ansible.builtin.copy:
#     src: "files/dsw-mailer/"
#     dest: "{{ dsw_config_dir }}/dsw-mailer/"
#     owner: "root"
#     group: "root"
#     mode: "u=rwX,go=rX"
#     force: true

# # MinIO
# - name: "Have MinIO data dir '{{ dsw_minio_data_dir }}'"
#   ansible.builtin.file:
#     path: '{{ dsw_minio_data_dir }}'
#     state: directory
#     owner: "root"
#     group: "root"
#     mode: "u=rwx,go="

# - name: "Have MinIO backup dir '{{ dsw_minio_backup_dir }}'"
#   ansible.builtin.file:
#     path: "{{ dsw_minio_backup_dir }}"
#     state: directory
#     owner: "root"
#     group: "root"
#     mode: "u=rwx,go="

# - name: Update DSW backup-minio script
#   ansible.builtin.template:
#     dest: "{{ dsw_config_dir }}/backup-minio.sh"
#     src: "dsw-backup-minio.sh.j2"
#     owner: "root"
#     group: "root"
#     mode: "u=rwx,go="

#   # NOTE pouzit system role task?
# - name: Let Cron to run DSW backup-minio script hourly
#   ansible.builtin.cron:
#     name: dws_backup_minio
#     state: present
#     special_time: hourly
#     job: "{{ dsw_config_dir }}/backup-minio.sh >/dev/null"

# # Postgres Backup

# - name: Have Postgres data dir '{{ dsw_postgres_data_dir }}'
#   ansible.builtin.file:
#     path: '{{ dsw_postgres_data_dir }}'
#     state: directory
#     owner: "root"
#     group: "root"
#     mode: "uo=rwx,g=" # TODO: zkontrolovat, zdali je to spravne
#   tags:
#     - configure
#     - dsw-config-postgres

# - name: Have Postgres backup dir '{{ dsw_postgres_backup_dir }}'
#   ansible.builtin.file:
#     path: '{{ dsw_postgres_backup_dir }}'
#     state: directory
#     owner: "root"
#     group: "root"
#     mode: "uo=rwx,g=" # TODO: zkontrolovat, zdali je to spravne
#   tags:
#     - configure
#     - dsw-config-postgres

# - name: Update DSW backup-postgres script
#   ansible.builtin.template:
#     dest: "{{ dsw_config_dir }}/backup-postgres.sh"
#     src: "dsw-backup-postgres.sh.j2"
#     owner: "root"
#     group: "root"
#     mode: "u=rwx,go="
#   tags:
#     - configure
#     - dsw-config-postgres

#   # NOTE system role task?
# - name: Let Cron to run DSW backup-postgres script hourly
#   ansible.builtin.cron:
#     name: dws_backup_postgres
#     state: present
#     special_time: hourly
#     job: "{{ dsw_config_dir }}/backup-postgres.sh"
#   tags:
#     - configure
#     - dsw-config-postgres
