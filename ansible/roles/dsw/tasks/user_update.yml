# Aktualizuje daneho uzivatele v DSW
# @required_vars: dsw_user_email

- name: user_update | Get API token if nessesary
  ansible.builtin.include_tasks: get_api_token.yml
  when: __dsw_api_token is not defined

- name: "user_create | Set __dsw_user_email"
  ansible.builtin.set_fact:
    __dsw_user_email: "{{ __dsw_user_update.email }}"

- name: "user_update | Get UUID for user: {{ __dsw_user_email }}"
  ansible.builtin.include_tasks: user_get.yml

- name: "user_update | Update internal user: {{ __dsw_user_email }}"
  ansible.builtin.uri:
    url: "{{ dsw_api_url }}/users/{{ __dsw_user.uuid }}"
    method: PUT
    status_code: 200
    headers:
      Authorization: "Bearer {{ __dsw_api_token }}"
    body_format: json
    body:
      active:      "{{ __dsw_user_update.active      | default(__dsw_user.active) }}"
      email:       "{{ __dsw_user_update.email       | default(__dsw_user.email) }}"
      firstName:   "{{ __dsw_user_update.firstName   | default(__dsw_user.firstName) }}"
      lastName:    "{{ __dsw_user_update.lastName    | default(__dsw_user.lastName) }}"
      role:        "{{ __dsw_user_update.role        | default(__dsw_user.role) }}"
      affiliation: "{{ __dsw_user_update.affiliation | default(__dsw_user.affiliation) }}"
  register: __dsw_api_response
  changed_when: >
    (__dsw_user_update.role        is defined and __dsw_user_update.role        != __dsw_user.role) or
    (__dsw_user_update.active      is defined and __dsw_user_update.active      != __dsw_user.active) or
    (__dsw_user_update.email       is defined and __dsw_user_update.email       != __dsw_user.email) or
    (__dsw_user_update.firstName   is defined and __dsw_user_update.firstName   != __dsw_user.firstName) or
    (__dsw_user_update.lastName    is defined and __dsw_user_update.lastName    != __dsw_user.lastName) or
    (__dsw_user_update.affiliation is defined and __dsw_user_update.affiliation != __dsw_user.affiliation)
# changed_when: >
# ověří, zda jsou všechny klíče v __dsw_user_update také v __dsw_user
#   - "__dsw_user_update.keys() | intersect(__dsw_user.keys()) == __dsw_user_update.keys()"
# ověří, zda hodnoty pro klíče v __dsw_user_update odpovídají hodnotám v __dsw_user #}
#   - "all(__dsw_user[k] == __dsw_user_update[k] for k in __dsw_user_update.keys())"
  when:
    - __dsw_user != none

- name: "[DEBUG] user_update | Api responese"
  ansible.builtin.debug:
    var: __dsw_api_response
  when:
    - "'DEBUG' in ansible_run_tags"
