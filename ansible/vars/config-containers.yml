dsw_minio_net: dsw_net # for create bucket # TPDP better

# dsw container app in "composer" format
dsw_container_app:
  networks:
    dsw_net:

  volumes:
    s3_data:
    db_data:

  containers:
    dsw_server:
      image: "{{ dsw_server_image }}"
      ports: "{{ dsw_server_ports | default(omit) }}"
      depends_on:
        - postgres
        - minio
      volumes:
        - "{dsw_conf_dir}}/dsw.yml:/application/engine-wizard/config/application.yml:ro:z"
        - "{dsw_conf_dir}}/integration.yml:/application/engine-wizard/config/integration.yml:ro:z"

    dsw_client:
      image: "{{ dsw_client_image }}"
      ports: "{{ dsw_client_ports | default(omit) }}"
      environment:
        API_URL: https://{{ hostname }}:3443
      volumes:
        - "{{ dsw_conf_dir }}/dsw-client/src/scss/customizations/_variables.scss:/src/scss/customizations/_variables.scss:ro:Z"
        - "{{ dsw_conf_dir }}/dsw-client/usr/share/nginx/html/favicon.ico:/usr/share/nginx/html/favicon.ico:ro:Z"

    dsw_docworker:
      image: "{{ dsw_docworker_image }}"
      depends_on:
        - postgres
        - minio
        - dsw_server
      volumes:
        - "{{ dsw_conf_dir }}/dsw.yml:/app/config.yml:ro:z"

    dsw_mailer:
      image: "{{ dsw_mailer_image }}"
      depends_on:
        - postgres
        - dsw_server
      volumes:
        - "{{ dsw_config_dir }}/dsw.yml:/app/config.yml:ro:z"
        - "{{ dsw_config_dir }}/dsw-mailer/templates:/app/templates:ro:Z"

    postgres:
      image: "{{ dsw_postgres_image }}"
      environment:
        POSTGRES_DB: "{{ dsw_postgres_db }}"
        POSTGRES_USER: "{{ dsw_postgres_user }}"
        POSTGRES_PASSWORD: "{{ dsw_postgres_password }}"
      ports: "{{ dsw_postgres_ports}}"
      volumes:
        - db_data:/var/lib/postgresql/data
        - "{{ dsw_postgres_backup_dir_outside }}:{{ dsw_postgres_backup_dir_inside }}"

    minio:
      image: "{{ dsw_minio_image }}"
      command: [server, /data, --console-address, ":9001"]
      ports: "{{ dsw_minio_ports | default(omit) }}"
      environment:
        MINIO_ROOT_USER: "{{ dsw_minio_user }}"
        MINIO_ROOT_PASSWORD: "{{ dsw_minio_password }}"
      volumes:
        - s3_data:/data

# create bucket - only for init
dsw_miniomc_container:
  image: "{{ dsw_repo }}/minio/mc"
  command: [] # TODO
  restart_policy: none
  detach: false
  environment:
    MINIO_ROOT_USER: "{{ dsw_minio_user }}"
    MINIO_ROOT_PASSWORD: "{{ dsw_minio_password }}"
    MINIO_BUCKET: "{{ dsw_minio_password }}"